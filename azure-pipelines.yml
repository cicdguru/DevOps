# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'
- task: AzureCLI@2
  displayName: 'Apply Lock' 

  inputs:
    azureSubscription: 'Pay-As-You-Go(681553e1-c4b9-4afd-9957-5d0a05feefd3)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      #!/bin/bash
            
            # Resource group names
            resource_groups=$(az group list --query "[].name" -o tsv)
            
            # Apply CanNotDelete lock on resource groups
            for rg in $resource_groups; do
                if [[ ! $rg =~ "test" ]]; then
                    echo "Applying CanNotDelete lock on resource group: $rg"
                    az lock create --name "CanNotDelete" --lock-type CanNotDelete --resource-group $rg --notes "Lock applied by script"
                else
                    echo "Skipping resource group: $rg"
                fi
            done
- task: AzureCLI@2
  displayName: 'Remove Lock' 
  inputs:
    azureSubscription: 'Pay-As-You-Go(681553e1-c4b9-4afd-9957-5d0a05feefd3)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      #!/bin/bash
      
      # Resource group names
      resource_groups=$(az group list --query "[].name" -o tsv)
      
      # Delete CanNotDelete lock from resource groups
      for rg in $resource_groups; do
          lock_id=$(az lock list --resource-group $rg --query "[?name=='CanNotDelete'].id" -o tsv)
          if [ -n "$lock_id" ]; then
              echo "Deleting CanNotDelete lock from resource group: $rg"
              az lock delete --ids $lock_id
          else
              echo "No CanNotDelete lock found for resource group: $rg"
          fi
      done
    addSpnToEnvironment: true
    useGlobalConfig: true